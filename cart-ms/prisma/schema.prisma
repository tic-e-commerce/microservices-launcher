// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CartItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  productId Int     // ID del producto desde products-ms
  userId    Int     // ID del usuario desde auth-ms
}


// model User {
//   id        Int        @id @default(autoincrement())
//   email     String     @unique
//   name      String
//   orders    Order[]
//   cartItems CartItem[]
// }

// model Product {
//   id          Int         @id @default(autoincrement())
//   name        String
//   description String
//   price       Float
//   stock       Int
//   cartItems   CartItem[]
//   orders      OrderItem[]
// }

// model CartItem {
//   id        Int     @id @default(autoincrement())
//   quantity  Int
//   product   Product @relation(fields: [productId], references: [id])
//   productId Int
//   user      User    @relation(fields: [userId], references: [id])
//   userId    Int
// }

// model Order {
//   id          Int         @id @default(autoincrement())
//   createdAt   DateTime    @default(now())
//   totalAmount Float
//   user        User        @relation(fields: [userId], references: [id])
//   userId      Int
//   items       OrderItem[]
// }

// model OrderItem {
//   id        Int     @id @default(autoincrement())
//   order     Order   @relation(fields: [orderId], references: [id])
//   orderId   Int
//   product   Product @relation(fields: [productId], references: [id])
//   productId Int
//   quantity  Int
//   price     Float
// }
