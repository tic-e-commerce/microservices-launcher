steps:
  # Paso 1: Construir la imagen de Docker
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        'us-central1-docker.pkg.dev/main-stack-446713-e6/backend-tic/gateway-ms',
        '-f',
        'gateway-ms/dockerfile.prod',
        '--platform=linux/amd64',
        '.',
      ]

  # Paso 2: Publicar la imagen en Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'us-central1-docker.pkg.dev/main-stack-446713-e6/backend-tic/gateway-ms',
      ]

  # Paso 3: Instalar el plugin gke-gcloud-auth-plugin
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['components', 'install', 'gke-gcloud-auth-plugin']

  # Paso 4: Autenticarse contra el cl√∫ster de Kubernetes
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      [
        'container',
        'clusters',
        'get-credentials',
        'tic-backend-gke',
        '--region',
        'southamerica-east1',
      ]

  # Paso 5: Instalar Helm y ejecutar el comando Helm
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'sh'
    args:
      [
        '-c',
        'curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash && helm upgrade gateway-ms ./k8s/tic-backend/gateway-ms --install --atomic --set image.repository=us-central1-docker.pkg.dev/main-stack-446713-e6/backend-tic/gateway-ms,image.tag=${COMMIT_SHA} --namespace default',
      ]

options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _CLUSTER_NAME: 'tic-backend-gke'
  _REGION: 'southamerica-east1'
  _DOCKER_REPO: 'us-central1-docker.pkg.dev/main-stack-446713-e6/backend-tic'
